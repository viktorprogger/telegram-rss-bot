version: "3.7"
services:
  bot:
    build:
      dockerfile: .docker/php/Dockerfile
      context: ./
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - ./.docker/logs:/var/log
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/40-custom.ini:ro
      - ./.docker/data/composer:/root/.composer
      - ./app:/var/www
      - ./.env:/var/.env
    environment:
      TZ: Europe/Moscow
      DB_NAME: ${DB_NAME}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_PASSWORD}
      RSS_BOT_TOKEN: ${RSS_BOT_TOKEN}
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    ports:
      - "${WEB_PORT:-80}:80"
    env_file:
      - .env
    depends_on:
      - db
      - amqp
    links:
      - db
      - amqp
    extra_hosts:
      - host.docker.internal:${HOST_IP:-host.docker.internal}

  bot-queue-source-listen:
    build:
      dockerfile: .docker/php/Dockerfile
      context: ./
    command: php ./yii queue/listen rss-source
    restart: unless-stopped
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - ./.docker/logs:/var/log
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/40-custom.ini:ro
      - ./.docker/data/composer:/root/.composer
      - ./app:/var/www
      - ./.env:/var/.env
    environment:
      TZ: Europe/Moscow
      DB_NAME: ${DB_NAME}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_PASSWORD}
      RSS_BOT_TOKEN: ${RSS_BOT_TOKEN}
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    env_file:
      - .env
    depends_on:
      - db
      - amqp
    links:
      - db
      - amqp
    extra_hosts:
      - host.docker.internal:${HOST_IP:-host.docker.internal}

  bot-queue-target-listen:
    build:
      dockerfile: .docker/php/Dockerfile
      context: ./
    command: php ./yii queue/listen rss-target
    restart: unless-stopped
    user: "${USER_ID:-1000}:${GROUP_ID:-1000}"
    volumes:
      - ./.docker/logs:/var/log
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/40-custom.ini:ro
      - ./.docker/data/composer:/root/.composer
      - ./app:/var/www
      - ./.env:/var/.env
    environment:
      TZ: Europe/Moscow
      DB_NAME: ${DB_NAME}
      DB_LOGIN: ${DB_LOGIN}
      DB_PASSWORD: ${DB_PASSWORD}
      RSS_BOT_TOKEN: ${RSS_BOT_TOKEN}
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    env_file:
      - .env
    depends_on:
      - db
      - amqp
    links:
      - db
      - amqp
    extra_hosts:
      - host.docker.internal:${HOST_IP:-host.docker.internal}

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - .docker/data/db:/var/lib/mysql
    ports:
      - "${DB_PORT:-3308}:3306"
    environment:
      TZ: Europe/Moscow
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_LOGIN}

  amqp:
    image: rabbitmq:3-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USER}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    expose:
      - 5672
    ports:
      - ${AMQP_PORT:-15672}:15672
